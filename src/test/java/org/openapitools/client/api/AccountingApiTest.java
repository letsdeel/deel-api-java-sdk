/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorContainer;
import java.math.BigDecimal;
import org.openapitools.client.model.DeelInvoiceListContainer;
import org.openapitools.client.model.GetBillingInvoiceDownloadLink200Response;
import org.openapitools.client.model.GetContractListCurrenciesParameter;
import org.openapitools.client.model.GetInvoiceList200Response;
import org.openapitools.client.model.GetInvoiceListEntitiesParameter;
import org.openapitools.client.model.GetPaymentList200Response;
import org.openapitools.client.model.GetPaymentsBreakDownById200Response;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountingApi
 */
@Disabled
public class AccountingApiTest {

    private final AccountingApi api = new AccountingApi();

    /**
     * Download invoice PDF
     *
     * Get a link to download the invoice PDF.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBillingInvoiceDownloadLinkTest() throws ApiException {
        String id = null;
        GetBillingInvoiceDownloadLink200Response response = api.getBillingInvoiceDownloadLink(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Deel invoices
     *
     * Retrieve a list of invoices related to Deel fees.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeelInvoiceListTest() throws ApiException {
        String contractId = null;
        BigDecimal limit = null;
        BigDecimal offset = null;
        DeelInvoiceListContainer response = api.getDeelInvoiceList(contractId)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve invoices
     *
     * Retrieve a list of paid invoices for your workforce.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvoiceListTest() throws ApiException {
        String issuedFromDate = null;
        String issuedToDate = null;
        GetInvoiceListEntitiesParameter entities = null;
        BigDecimal limit = null;
        BigDecimal offset = null;
        GetInvoiceList200Response response = api.getInvoiceList()
                .issuedFromDate(issuedFromDate)
                .issuedToDate(issuedToDate)
                .entities(entities)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve payment receipts
     *
     * Retrieve a list of payments made to Deel, including worker details, payment status, and payment methods.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPaymentListTest() throws ApiException {
        LocalDate dateFrom = null;
        LocalDate dateTo = null;
        GetContractListCurrenciesParameter currencies = null;
        GetInvoiceListEntitiesParameter entities = null;
        GetPaymentList200Response response = api.getPaymentList()
                .dateFrom(dateFrom)
                .dateTo(dateTo)
                .currencies(currencies)
                .entities(entities)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a payment breakdown
     *
     * Get a full breakdown of a payment made to Deel. Breakdown will include individual invoices and Deel fee as line items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPaymentsBreakDownByIdTest() throws ApiException {
        String paymentId = null;
        GetPaymentsBreakDownById200Response response = api.getPaymentsBreakDownById(paymentId)
                .execute();
        // TODO: test validations
    }

}
