/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorContainer;
import org.openapitools.client.model.CreateContractPgoTak201Response;
import org.openapitools.client.model.CreateContractPgoTak400Response;
import org.openapitools.client.model.CreateContractPgoTak401Response;
import org.openapitools.client.model.CreateContractPgoTak500Response;
import org.openapitools.client.model.CreateContractPgoTakRequest;
import org.openapitools.client.model.CreateTaskManyReview201Response;
import org.openapitools.client.model.CreateTaskManyReview400Response;
import org.openapitools.client.model.CreateTaskManyReview404Response;
import org.openapitools.client.model.CreateTaskManyReview500Response;
import org.openapitools.client.model.CreateTaskManyReviewRequest;
import org.openapitools.client.model.CreateTaskReviewById201Response;
import org.openapitools.client.model.CreateTaskReviewById404Response;
import org.openapitools.client.model.CreateTaskReviewById500Response;
import org.openapitools.client.model.CreateTaskReviewByIdRequest;
import org.openapitools.client.model.DeleteContractTaskById200Response;
import org.openapitools.client.model.GetTasksByContract200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    /**
     * Create a new task
     *
     * Create a new task for a contractor associated with a specific Deel contract. A task can include details like amount, description, submission date, and optional attachments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createContractPgoTakTest() throws ApiException {
        String contractId = null;
        CreateContractPgoTakRequest createContractPgoTakRequest = null;
        CreateContractPgoTak201Response response = api.createContractPgoTak(contractId, createContractPgoTakRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Review multiple tasks
     *
     * Review multiple tasks associated with a Deel contract to approve or decline the submitted work. The review includes a status (approved or declined) for each task and an optional reason for declined tasks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTaskManyReviewTest() throws ApiException {
        String contractId = null;
        CreateTaskManyReviewRequest createTaskManyReviewRequest = null;
        CreateTaskManyReview201Response response = api.createTaskManyReview(contractId, createTaskManyReviewRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Review a single task
     *
     * Review a specific task associated with a Deel contract to approve or decline the submitted work. The review includes the status (approved or declined) and an optional reason if declined.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTaskReviewByIdTest() throws ApiException {
        String contractId = null;
        String taskId = null;
        CreateTaskReviewByIdRequest createTaskReviewByIdRequest = null;
        CreateTaskReviewById201Response response = api.createTaskReviewById(contractId, taskId, createTaskReviewByIdRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete task
     *
     * Delete a specific task associated with the contract. Optionally, a reason can be provided for auditing or documentation purposes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteContractTaskByIdTest() throws ApiException {
        String contractId = null;
        String taskId = null;
        String reason = null;
        DeleteContractTaskById200Response response = api.deleteContractTaskById(contractId, taskId)
                .reason(reason)
                .execute();
        // TODO: test validations
    }

    /**
     * List of tasks
     *
     * Retrieve a list of tasks associated with a specific contract. Each task contains details such as its ID, amount, submission date, status, and description. This endpoint is useful for tracking the progress and status of tasks related to contracts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTasksByContractTest() throws ApiException {
        String contractId = null;
        GetTasksByContract200Response response = api.getTasksByContract(contractId)
                .execute();
        // TODO: test validations
    }

}
