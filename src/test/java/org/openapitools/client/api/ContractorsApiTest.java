/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AmendContractDetails201Response;
import org.openapitools.client.model.AmendContractDetailsRequest;
import org.openapitools.client.model.ApiErrorContainer;
import org.openapitools.client.model.CreateContract201Response;
import org.openapitools.client.model.CreateContractRequest;
import org.openapitools.client.model.CreateContractRequest1;
import org.openapitools.client.model.GenericResultDeleted;
import org.openapitools.client.model.PremiumResultAddedContainer;
import org.openapitools.client.model.PremiumToAddContainer;
import org.openapitools.client.model.TerminateContract201Response;
import org.openapitools.client.model.TerminateContractRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractorsApi
 */
@Disabled
public class ContractorsApiTest {

    private final ContractorsApi api = new ContractorsApi();

    /**
     * Upgrade to Premium
     *
     * Add additional protection against misclassification by upgrading to Deel Premium.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPremiumTest() throws ApiException {
        String contractId = null;
        PremiumToAddContainer premiumToAddContainer = null;
        PremiumResultAddedContainer response = api.addPremium(contractId)
                .premiumToAddContainer(premiumToAddContainer)
                .execute();
        // TODO: test validations
    }

    /**
     * Amend contract
     *
     * Amend the details of a contract. Please note that if the contract is already signed or active, then the update will have to be approved and re-signed for to take effect.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amendContractDetailsTest() throws ApiException {
        String contractId = null;
        AmendContractDetailsRequest amendContractDetailsRequest = null;
        AmendContractDetails201Response response = api.amendContractDetails(contractId, amendContractDetailsRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract
     *
     * Create a new Deel contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createContractTest() throws ApiException {
        CreateContractRequest createContractRequest = null;
        CreateContract201Response response = api.createContract(createContractRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Preview a contract agreement
     *
     * Retrieve an IC and EOR contract agreement content in HTML. If no template is specified, the default or currently assigned template will be used. This endpoint does not support Global Payroll contract type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractPreviewTest() throws ApiException {
        String contractId = null;
        UUID templateId = null;
        String response = api.getContractPreview(contractId)
                .templateId(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Downgrade from Premium
     *
     * Remove Deel Premium from an existing contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePremiumFromContractTest() throws ApiException {
        String contractId = null;
        String reason = null;
        GenericResultDeleted response = api.removePremiumFromContract(contractId)
                .reason(reason)
                .execute();
        // TODO: test validations
    }

    /**
     * Terminate contract
     *
     * Terminate contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void terminateContractTest() throws ApiException {
        String contractId = null;
        TerminateContractRequest terminateContractRequest = null;
        TerminateContract201Response response = api.terminateContract(contractId, terminateContractRequest)
                .execute();
        // TODO: test validations
    }

}
