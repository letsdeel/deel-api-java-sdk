/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorContainer;
import org.openapitools.client.model.CreateOffCyclePayment201Response;
import org.openapitools.client.model.CreateOffCyclePaymentRequest;
import org.openapitools.client.model.GenericResultCreatedWithId;
import org.openapitools.client.model.GetOffCyclePaymentByContractAndId200Response;
import org.openapitools.client.model.GetOffCyclePaymentsByContract200Response;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OffCyclePaymentsApi
 */
@Disabled
public class OffCyclePaymentsApiTest {

    private final OffCyclePaymentsApi api = new OffCyclePaymentsApi();

    /**
     * Add off-cycle payment
     *
     * Add a new invoice line-item for the purpose of an off-cycle payment associated with a specific contract. This is typically used for exceptional payments outside the regular payment schedule.  **Token scopes**: &#x60;off-cycle-payments:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOffCyclePaymentTest() throws ApiException {
        String contractId = null;
        CreateOffCyclePaymentRequest createOffCyclePaymentRequest = null;
        GenericResultCreatedWithId response = api.createOffCyclePayment(contractId, createOffCyclePaymentRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a single off-cycle payment
     *
     * Retrieve a single off-cycle payment.  **Token scopes**: &#x60;off-cycle-payments:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOffCyclePaymentByContractAndIdTest() throws ApiException {
        String contractId = null;
        UUID id = null;
        GetOffCyclePaymentByContractAndId200Response response = api.getOffCyclePaymentByContractAndId(contractId, id)
                .execute();
        // TODO: test validations
    }

    /**
     * List of off-cycle payments
     *
     * Retrieve a list of off-cycle payments for the specified contract ID. Off-cycle payments are payments made outside the regular payment schedule, often for exceptional or one-time expenses.  **Token scopes**: &#x60;off-cycle-payments:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOffCyclePaymentsByContractTest() throws ApiException {
        String contractId = null;
        GetOffCyclePaymentsByContract200Response response = api.getOffCyclePaymentsByContract(contractId)
                .execute();
        // TODO: test validations
    }

}
