/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiErrorContainer;
import org.openapitools.client.model.CreateShiftRate201Response;
import org.openapitools.client.model.CreateShiftRateRequest;
import org.openapitools.client.model.GetShiftRate200Response;
import org.openapitools.client.model.GetShiftRates200Response;
import org.openapitools.client.model.UpdateShiftRate200Response;
import org.openapitools.client.model.UpdateShiftRate400Response;
import org.openapitools.client.model.UpdateShiftRateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimeTrackingRatesApi
 */
@Disabled
public class TimeTrackingRatesApiTest {

    private final TimeTrackingRatesApi api = new TimeTrackingRatesApi();

    /**
     * Create a New Shift Rate
     *
     * Create a new shift rate with the specified attributes such as name, type, value, and a unique external identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createShiftRateTest() throws ApiException {
        CreateShiftRateRequest createShiftRateRequest = null;
        CreateShiftRate201Response response = api.createShiftRate()
                .createShiftRateRequest(createShiftRateRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a ShiftRate by external ID
     *
     * Delete a ShiftRate by external ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteShiftRateExternalIdTest() throws ApiException {
        String externalId = null;
        api.deleteShiftRateExternalId(externalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Shift Rate by External ID
     *
     * Retrieve details of a specific shift rate using its external ID. The response includes information such as the name, type, value, and unique identifier of the shift rate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShiftRateTest() throws ApiException {
        String externalId = null;
        GetShiftRate200Response response = api.getShiftRate(externalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a Paginated List of Shift Rates
     *
     * Retrieve a paginated list of shift rates, including details such as rate name, type, value, and timestamps. Pagination parameters can be used to control the size and position of the result set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShiftRatesTest() throws ApiException {
        String limit = null;
        String offset = null;
        GetShiftRates200Response response = api.getShiftRates()
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a shift rate
     *
     * Update specific fields of an existing shift rate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateShiftRateTest() throws ApiException {
        String externalId = null;
        UpdateShiftRateRequest updateShiftRateRequest = null;
        UpdateShiftRate200Response response = api.updateShiftRate(externalId, updateShiftRateRequest)
                .execute();
        // TODO: test validations
    }

}
