/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type of invoice adjustment.
 */
@JsonAdapter(InvoiceAdjustmentTypeEnum.Adapter.class)
public enum InvoiceAdjustmentTypeEnum {
  
  ACCRUED_HOLIDAY("accrued_holiday"),
  
  ADDITIONAL_FEE("additional_fee"),
  
  ALLOWANCE("allowance"),
  
  BONUS("bonus"),
  
  COMMISSION("commission"),
  
  DEDUCTION("deduction"),
  
  DEPOSIT("deposit"),
  
  DEPOSIT_REFUND("deposit_refund"),
  
  EMPLOYER_COST("employer_cost"),
  
  EXPENSE("expense"),
  
  HEALTH_ALLOWANCE("health_allowance"),
  
  HEALTH_BENEFIT("health_benefit"),
  
  HEALTH_INSURANCE_FEE("health_insurance_fee"),
  
  LEGAL_FEE("legal_fee"),
  
  MANAGEMENT_FEE("management_fee"),
  
  MILESTONE("milestone"),
  
  OFFCYCLE("offcycle"),
  
  OTHER("other"),
  
  OVERTIME("overtime"),
  
  PENSION("pension"),
  
  PRO_RATA("pro_rata"),
  
  SETUP_FEE("setup_fee"),
  
  SEVERANCE("severance"),
  
  SHIELD_SERVICE("shield_service"),
  
  SIGNING_BONUS("signing_bonus"),
  
  SIGNING_BONUS_EMPLOYER_COST("signing_bonus_employer_cost"),
  
  REFUND("refund"),
  
  TASK("task"),
  
  TIME_OFF("time_off"),
  
  VAT("vat"),
  
  WITHHOLDING_TAX("withholding_tax"),
  
  WORK("work");

  private String value;

  InvoiceAdjustmentTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static InvoiceAdjustmentTypeEnum fromValue(String value) {
    for (InvoiceAdjustmentTypeEnum b : InvoiceAdjustmentTypeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<InvoiceAdjustmentTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final InvoiceAdjustmentTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public InvoiceAdjustmentTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return InvoiceAdjustmentTypeEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    InvoiceAdjustmentTypeEnum.fromValue(value);
  }
}

