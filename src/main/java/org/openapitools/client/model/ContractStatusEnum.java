/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Status of a contract in Deel workflow
 */
@JsonAdapter(ContractStatusEnum.Adapter.class)
public enum ContractStatusEnum {
  
  NEW("new"),
  
  UNDER_REVIEW("under_review"),
  
  WAITING_FOR_EMPLOYEE_CONTRACT("waiting_for_employee_contract"),
  
  WAITING_FOR_CLIENT_SIGN("waiting_for_client_sign"),
  
  PROCESSING_PAYMENT("processing_payment"),
  
  WAITING_FOR_CONTRACTOR_SIGN("waiting_for_contractor_sign"),
  
  WAITING_FOR_EOR_SIGN("waiting_for_eor_sign"),
  
  WAITING_FOR_EMPLOYEE_SIGN("waiting_for_employee_sign"),
  
  AWAITING_DEPOSIT_PAYMENT("awaiting_deposit_payment"),
  
  IN_PROGRESS("in_progress"),
  
  COMPLETED("completed"),
  
  CANCELLED("cancelled"),
  
  USER_CANCELLED("user_cancelled"),
  
  REJECTED("rejected"),
  
  WAITING_FOR_CLIENT_PAYMENT("waiting_for_client_payment"),
  
  ONBOARDING("onboarding");

  private String value;

  ContractStatusEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ContractStatusEnum fromValue(String value) {
    for (ContractStatusEnum b : ContractStatusEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ContractStatusEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final ContractStatusEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ContractStatusEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ContractStatusEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ContractStatusEnum.fromValue(value);
  }
}

