/*
 * Deel REST API
 * Deel REST API
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent;
import org.openapitools.client.model.GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan;
import org.openapitools.client.model.GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetEORContractBenefits200ResponseDataInnerEnrollmentDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-20T12:32:05.400762149Z[GMT]", comments = "Generator version: 7.10.0")
public class GetEORContractBenefits200ResponseDataInnerEnrollmentDetails {
  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  @javax.annotation.Nullable
  private GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan plan;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_CURRENT = "current";
  @SerializedName(SERIALIZED_NAME_CURRENT)
  @javax.annotation.Nullable
  private GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent current;

  public static final String SERIALIZED_NAME_STANDARD = "standard";
  @SerializedName(SERIALIZED_NAME_STANDARD)
  @javax.annotation.Nullable
  private GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard standard;

  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails() {
  }

  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails plan(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan plan) {
    this.plan = plan;
    return this;
  }

  /**
   * Get plan
   * @return plan
   */
  @javax.annotation.Nullable
  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan getPlan() {
    return plan;
  }

  public void setPlan(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan plan) {
    this.plan = plan;
  }


  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * The current enrollment status of the benefit.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails current(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent current) {
    this.current = current;
    return this;
  }

  /**
   * Get current
   * @return current
   */
  @javax.annotation.Nullable
  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent getCurrent() {
    return current;
  }

  public void setCurrent(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent current) {
    this.current = current;
  }


  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails standard(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard standard) {
    this.standard = standard;
    return this;
  }

  /**
   * Get standard
   * @return standard
   */
  @javax.annotation.Nullable
  public GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard getStandard() {
    return standard;
  }

  public void setStandard(@javax.annotation.Nullable GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard standard) {
    this.standard = standard;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEORContractBenefits200ResponseDataInnerEnrollmentDetails getEORContractBenefits200ResponseDataInnerEnrollmentDetails = (GetEORContractBenefits200ResponseDataInnerEnrollmentDetails) o;
    return Objects.equals(this.plan, getEORContractBenefits200ResponseDataInnerEnrollmentDetails.plan) &&
        Objects.equals(this.status, getEORContractBenefits200ResponseDataInnerEnrollmentDetails.status) &&
        Objects.equals(this.current, getEORContractBenefits200ResponseDataInnerEnrollmentDetails.current) &&
        Objects.equals(this.standard, getEORContractBenefits200ResponseDataInnerEnrollmentDetails.standard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plan, status, current, standard);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEORContractBenefits200ResponseDataInnerEnrollmentDetails {\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    standard: ").append(toIndentedString(standard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("plan");
    openapiFields.add("status");
    openapiFields.add("current");
    openapiFields.add("standard");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetEORContractBenefits200ResponseDataInnerEnrollmentDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetEORContractBenefits200ResponseDataInnerEnrollmentDetails is not found in the empty JSON string", GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetEORContractBenefits200ResponseDataInnerEnrollmentDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `plan`
      if (jsonObj.get("plan") != null && !jsonObj.get("plan").isJsonNull()) {
        GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsPlan.validateJsonElement(jsonObj.get("plan"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `current`
      if (jsonObj.get("current") != null && !jsonObj.get("current").isJsonNull()) {
        GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsCurrent.validateJsonElement(jsonObj.get("current"));
      }
      // validate the optional field `standard`
      if (jsonObj.get("standard") != null && !jsonObj.get("standard").isJsonNull()) {
        GetEORContractBenefits200ResponseDataInnerEnrollmentDetailsStandard.validateJsonElement(jsonObj.get("standard"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetEORContractBenefits200ResponseDataInnerEnrollmentDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetEORContractBenefits200ResponseDataInnerEnrollmentDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GetEORContractBenefits200ResponseDataInnerEnrollmentDetails>() {
           @Override
           public void write(JsonWriter out, GetEORContractBenefits200ResponseDataInnerEnrollmentDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetEORContractBenefits200ResponseDataInnerEnrollmentDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetEORContractBenefits200ResponseDataInnerEnrollmentDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetEORContractBenefits200ResponseDataInnerEnrollmentDetails
   * @throws IOException if the JSON string is invalid with respect to GetEORContractBenefits200ResponseDataInnerEnrollmentDetails
   */
  public static GetEORContractBenefits200ResponseDataInnerEnrollmentDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetEORContractBenefits200ResponseDataInnerEnrollmentDetails.class);
  }

  /**
   * Convert an instance of GetEORContractBenefits200ResponseDataInnerEnrollmentDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

